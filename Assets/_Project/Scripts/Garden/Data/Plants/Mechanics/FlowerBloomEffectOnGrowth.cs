using UnityEngine;

/// <summary>
/// –ú–µ—Ö–∞–Ω–∏–∫–∞ —Ü–≤–µ—Ç–µ–Ω–∏—è: —Å–æ–∑–¥–∞–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞–¥–∏–π —Ä–æ—Å—Ç–∞
/// </summary>
[CreateAssetMenu(fileName = "FlowerBloomEffectOnGrowth", menuName = "Game/Plant Mechanics/Growth/Flower Bloom Effect")]
public class FlowerBloomEffectOnGrowth : OnGrowthStageChangedMechanics
{
    [Header("Visual Effect Settings")]
    [SerializeField] private bool showParticleEffects = true;
    [SerializeField] private bool playSoundEffects = true;
    [SerializeField] private bool showDebugLog = true;

    public override void Execute(PlantEntity plant, PlantState newState)
    {
        switch (newState)
        {
            case PlantState.Seed:
                OnSeedStage(plant);
                break;

            case PlantState.Growing:
                OnGrowingStage(plant);
                break;

            case PlantState.FullyGrown:
                OnFullyGrownStage(plant);
                break;

            case PlantState.Withered:
                OnWitheredStage(plant);
                break;
        }
    }

    private void OnSeedStage(PlantEntity plant)
    {
        if (showDebugLog)
        {
            Debug.Log($"üå± {plant.Data.DisplayName} - —Å—Ç–∞–¥–∏—è —Å–µ–º–µ–Ω–∏: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–æ—Å—Ç—É...");
        }

        // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–µ–º–µ–Ω–∏
        PlayEffect(plant, "seed_appear");
    }

    private void OnGrowingStage(PlantEntity plant)
    {
        if (showDebugLog)
        {
            Debug.Log($"üåø {plant.Data.DisplayName} - —Å—Ç–∞–¥–∏—è —Ä–æ—Å—Ç–∞: –∞–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ!");
        }

        // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —Ä–æ—Å—Ç–∞
        PlayEffect(plant, "growth_sparkle");
    }

    private void OnFullyGrownStage(PlantEntity plant)
    {
        if (showDebugLog)
        {
            Debug.Log($"üå∫ {plant.Data.DisplayName} - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞—Å—Ü–≤–µ–ª! –í–µ–ª–∏–∫–æ–ª–µ–ø–∏–µ –ø—Ä–∏—Ä–æ–¥—ã!");
        }

        // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —Ü–≤–µ—Ç–µ–Ω–∏—è
        PlayEffect(plant, "bloom_burst");
    }

    private void OnWitheredStage(PlantEntity plant)
    {
        if (showDebugLog)
        {
            Debug.Log($"üíÄ {plant.Data.DisplayName} - —É–≤—è–ª... –¶–∏–∫–ª –∂–∏–∑–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω.");
        }

        // TODO: –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç —É–≤—è–¥–∞–Ω–∏—è
        PlayEffect(plant, "wither_fade");
    }

    private void PlayEffect(PlantEntity plant, string effectName)
    {
        // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        // –ü–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

        if (showParticleEffects)
        {
            // –≠—Ñ—Ñ–µ–∫—Ç—ã —á–∞—Å—Ç–∏—Ü
        }

        if (playSoundEffects)
        {
            // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        }
    }
}